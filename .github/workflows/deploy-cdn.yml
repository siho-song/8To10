name: CI/CD Workflow

on:
  pull_request:
    branches:
      - main
    paths:
      - '8to10_frontend/**'

  push:
    branches:
      - main
    paths:
      - '8to10_frontend/**'

jobs:
  ci:
    if: ${{ github.event_name == 'pull_request' }} # Pull Request에서만 실행
    name: Run CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '23'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ env.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Check directory structure
        run: ls -R


      - name: Install npm dependencies
        working-directory: ./8to10_frontend
        run: npm install

      - name: Build React app
        working-directory: ./8to10_frontend
        run: npm run build

      - name: Run Tests
        working-directory: ./8to10_frontend
        run: npm test

  deploy:
    if: ${{ github.event_name == 'push' }} # Push 이벤트에서만 실행
    name: Deploy Frontend to CDN
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ env.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install npm dependencies
        working-directory: ./8to10_frontend
        run: npm install

      - name: Build React app
        working-directory: ./8to10_frontend
        run: npm run build

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Upload to GCS
        run: |
          gsutil rsync -r ./8to10_frontend/dist gs://${{ vars.STATIC_ASSETS_BUCKET }}/

      - name: Invalidate CDN cache
        run: |
          gcloud compute url-maps invalidate-cdn-cache eighttoten-static-lb \
            --path "/*"
            --project ${{ secrets.GCP_PROJECT_ID }}
