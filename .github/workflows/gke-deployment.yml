name: CI/CD to GKE

on:
  pull_request:
    branches:
      - main
    paths:
      - '8to10_backend/**'

  push:
    branches:
      - main
    paths:
      - '8to10_backend/**'

jobs:
  # CI Job: 실행 시 Pull Request에서만 동작
  ci:
    if: github.event_name == 'pull_request'
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Java JDK for Gradle
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      # 3. Cache Gradle dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{github.job}}
      # 4. Add execution permission to gradlew
      - name: Grant execute permission to gradlew
        run: chmod +x 8to10_backend/gradlew
      # 5. Build with Gradle
      - name: Build with Gradle
        working-directory: 8to10_backend
        run: ./gradlew clean build

  # CD Job: 실행 시 Push 이벤트에서만 동작
  cd:
    if: github.event_name == 'push'
    name: Deploy to GKE
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Authenticate to GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Configure Docker
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      # 3. Build and Push Docker Image
      - name: Build and Push Docker Image
        env:
          IMAGE_NAME: asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/8to10-image-repo/8to10-app
        run: |
          docker build -t $IMAGE_NAME:$GITHUB_SHA -f 8to10_backend/Dockerfile 8to10_backend
          docker push $IMAGE_NAME:$GITHUB_SHA   

      # 4. Set up kubectl
      - name: Set up kubectl
        env:
          CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
          CLUSTER_REGION: ${{ secrets.GKE_CLUSTER_REGION }}
        run: |
          gcloud container clusters get-credentials $CLUSTER_NAME --region $CLUSTER_REGION

      # 5. Update Deployment
      - name: Update Deployment
        env:
          IMAGE_NAME: asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/8to10-image-repo/8to10-app
        run: |
          echo "Current Image: $CURRENT_IMAGE"
          kubectl set image deployment/8to10-deployment 8to10=$IMAGE_NAME:$GITHUB_SHA
          kubectl rollout status deployment/8to10-deployment
          kubectl get services -o wide
