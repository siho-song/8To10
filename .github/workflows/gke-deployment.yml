name: CI/CD to GKE

on:
  pull_request:
    branches:
      - main
    paths:
      - '8to10_backend/**'

  push:
    branches:
      - main
    paths:
      - '8to10_backend/**'

jobs:
  ci:
    if: ${{ github.event_name == 'pull_request' }}
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add application-test.yaml
        run: |
          echo "${{ secrets.APPLICATION_TEST }}" > 8to10_backend/src/test/resources/application-test.yaml

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Grant execute permission to gradlew
        run: chmod +x 8to10_backend/gradlew
      
      - name: Clear Gradle Cache
        run: rm -rf ~/.gradle/caches

      - name: Build with Gradle
        working-directory: 8to10_backend
        run: ./gradlew clean build --refresh-dependencies --info

  cd:
    if: ${{ github.event_name == 'push' }}
    name: Deploy to GKE
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Add application-test.yaml
        run: |
          echo "${{ secrets.APPLICATION_TEST }}" > 8to10_backend/src/test/resources/application-test.yaml
      
      - name: Add application-prod.yaml
        run: |
          echo "${{ secrets.APPLICATION_PROD }}" > 8to10_backend/src/main/resources/application-prod.yaml
     
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Grant execute permission to gradlew
        run: chmod +x 8to10_backend/gradlew

      - name: Clear Gradle Cache
        run: rm -rf ~/.gradle/caches

      - name: Build with Gradle
        working-directory: 8to10_backend
        run: ./gradlew clean build --refresh-dependencies --info   

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Configure Docker
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true
          
      - name: Configure Docker for GCP Artifact Registry
        run: |
          gcloud auth configure-docker asia-northeast3-docker.pkg.dev
      
      - name: Build and Push Docker Image
        env:
          IMAGE_NAME: asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/eighttoten-image-repo/8to10-app
        run: |
          docker build -t $IMAGE_NAME:latest -f 8to10_backend/Dockerfile 8to10_backend
          docker push $IMAGE_NAME:latest

      - name: Set up kubectl
        env:
          CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
          CLUSTER_REGION: ${{ secrets.GKE_CLUSTER_REGION }}
        run: |
          gcloud container clusters get-credentials $CLUSTER_NAME --region $CLUSTER_REGION

      - name: Install gke-gcloud-auth-plugin
        uses: simenandre/setup-gke-gcloud-auth-plugin@v1
      
      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_CLUSTER_REGION }}
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Force Update Deployment with Latest Image
        env:
          IMAGE_NAME: asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/eighttoten-image-repo/8to10-app
        run: |
          echo "Triggering redeployment with :latest image"
          kubectl set image deployment/8to10-deployment 8to10=$IMAGE_NAME:latest --record
          kubectl rollout restart deployment/8to10-deployment
          kubectl rollout status deployment/8to10-deployment
          kubectl get services -o wide
